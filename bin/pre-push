#!/bin/bash

# Hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done

set -e

# NOTE: this will be executed from the .git/hooks folder via a symlink.
source $(dirname $0)/../../bin/env.sh
BASEDIR="${BASEDIR}/.."

remote="$1"
url="$2"
branch=$(git rev-parse --abbrev-ref HEAD)

# Only protect the `develop` branch against rogue pushes
if [[ ${branch} == 'develop' ]]; then
    exit
fi

${BASEDIR}/bin/build && ${BASEDIR}/bin/test
echo -e "[SUCCESS] Pushing branch ${branch} to remote '${remote}' (${url})"
